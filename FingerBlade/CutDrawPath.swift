//
//  CutDrawPath.swift
//  FingerBlade
//
//  Created by Eric T Cormack on 3/1/17.
//  Copyright Â© 2017 the Odin Spire. All rights reserved.
//

import UIKit

struct CutDrawPath {
    let start: CGPoint
    let path: [CGPoint]
    
    init(start beginning: CGPoint, path steps: [CGPoint], bounds: CGRect) {
        let size = bounds.size
        let lefty = UserDefaults.standard.string(forKey: "Hand") == "Left"
        
            //  mirror:point without supplying memory to another variable
        let flip = lefty ? { (x: CGFloat) -> CGFloat in 1 - x } : { x in x }
            
        start = CGPoint(x: flip(beginning.x) * size.width, y: beginning.y * size.height)
            
        var tmp = [CGPoint]()
        for step in steps { tmp.append(CGPoint(x: flip(step.x) * size.width, y: step.y * size.height)) }
        path = tmp
    }
    
    init(path steps: [CGPoint], bounds: CGRect) {
        guard steps.count >= 1 else {
            self.init(start: CGPoint(x: 0, y: 0), path: [], bounds: bounds)
            return
        }
        
        var tmp = steps
        self.init(start: tmp.remove(at: 0), path: tmp, bounds: bounds)
    }
    
    init(string: String, bounds: CGRect) {
        let steps = createCGPointArray(from: string)
        self.init(path: steps, bounds: bounds)
    }
    
    //  Calculated values
    var initialSpeed: CGFloat {
        guard path.count > 0 else { return 1 }
        let point = path.first!
        let dx = point.x - start.x
        let dy = point.y - start.y
        return sqrt(dx * dx + dy * dy)
    }
    
    var maxSpeed: CGFloat {
        var maxSpeed: CGFloat = 0
        var prev = start
        
        for point in path {
            let dx = point.x - prev.x
            let dy = point.y - prev.y
            
            let speed = sqrt(dx * dx + dy * dy)
            
            maxSpeed = max(maxSpeed, speed)
            
            prev = point
        }
        
        return maxSpeed
    }
    
    var minSpeed: CGFloat {
        var minSpeed = CGFloat.greatestFiniteMagnitude
        var prev = start
        
        for point in path {
            let dx = point.x - prev.x
            let dy = point.y - prev.y
            let speed = sqrt(dx * dx + dy * dy)
            
            minSpeed = min(minSpeed, speed)
            
            prev = point
        }
        
        return minSpeed
    }
    
    var deltaSpeed: CGFloat { return maxSpeed - minSpeed }
    
    var bezierPath: UIBezierPath {
        let bezPath = UIBezierPath()
        bezPath.move(to: start)
        for point in path { bezPath.addLine(to: point) }
        return bezPath
    }
    
    //  Static functions
    static func getExemplar(cut: CutLine, bounds: CGRect) -> CutDrawPath {
        switch cut {
            //  Values determined experimentally
        case .fendManTut:
            return CutDrawPath(string: "(0.824, 0.172413793103448), (0.805333333333333, 0.19640179910045), (0.781333333333333, 0.221889055472264), (0.746666666666667, 0.260869565217391), (0.693333333333333, 0.313343328335832), (0.629333333333333, 0.361319340329835), (0.56, 0.412293853073463), (0.488, 0.464767616191904), (0.418666666666667, 0.512743628185907), (0.357333333333333, 0.556221889055472), (0.309333333333333, 0.598200899550225), (0.274666666666667, 0.634182908545727), (0.248, 0.668665667166417), (0.229333333333333, 0.694152923538231), (0.216, 0.712143928035982), (0.210666666666667, 0.725637181409295), (0.205333333333333, 0.733133433283358), (0.205333333333333, 0.737631184407796), (0.205333333333333, 0.739130434782609), (0.205333333333333, 0.740629685157421), (0.205333333333333, 0.743628185907046), (0.197333333333333, 0.754122938530735)", bounds: bounds)
        case .fendManMez:
            return CutDrawPath(string: "(0.88, 0.133433283358321), (0.874666666666667, 0.148425787106447), (0.864, 0.166416791604198), (0.84, 0.188905547226387), (0.797333333333333, 0.223388305847076), (0.752, 0.256371814092954), (0.701333333333333, 0.292353823088456), (0.650666666666667, 0.328335832083958), (0.602666666666667, 0.362818590704648), (0.562666666666667, 0.394302848575712), (0.533333333333333, 0.418290854572714), (0.509333333333333, 0.442278860569715), (0.490666666666667, 0.464767616191904), (0.48, 0.482758620689655), (0.469333333333333, 0.497751124437781), (0.464, 0.508245877061469), (0.458666666666667, 0.52023988005997)", bounds: bounds)
        case .fendRivTut:
            return CutDrawPath(string: "(0.176, 0.172413793103448), (0.194666666666667, 0.19640179910045), (0.218666666666667, 0.221889055472264), (0.253333333333333, 0.260869565217391), (0.306666666666667, 0.313343328335832), (0.370666666666667, 0.361319340329835), (0.44, 0.412293853073463), (0.512, 0.464767616191904), (0.581333333333333, 0.512743628185907), (0.642666666666667, 0.556221889055472), (0.690666666666667, 0.598200899550225), (0.725333333333333, 0.634182908545727), (0.752, 0.668665667166417), (0.770666666666667, 0.694152923538231), (0.784, 0.712143928035982), (0.789333333333333, 0.725637181409295), (0.794666666666667, 0.733133433283358), (0.794666666666667, 0.737631184407796), (0.794666666666667, 0.739130434782609), (0.794666666666667, 0.740629685157421), (0.794666666666667, 0.743628185907046), (0.802666666666667, 0.754122938530735)", bounds: bounds)
        case .fendRivMez:
            return CutDrawPath(string: "(0.12, 0.133433283358321), (0.125333333333333, 0.148425787106447), (0.136, 0.166416791604198), (0.16, 0.188905547226387), (0.202666666666667, 0.223388305847076), (0.248, 0.256371814092954), (0.298666666666667, 0.292353823088456), (0.349333333333333, 0.328335832083958), (0.397333333333333, 0.362818590704648), (0.437333333333333, 0.394302848575712), (0.466666666666667, 0.418290854572714), (0.490666666666667, 0.442278860569715), (0.509333333333333, 0.464767616191904), (0.52, 0.482758620689655), (0.530666666666667, 0.497751124437781), (0.536, 0.508245877061469), (0.541333333333333, 0.52023988005997)", bounds: bounds)
        case .mezMan:
            return CutDrawPath(string: "(0.874666666666667, 0.457271364317841), (0.864, 0.458770614692654), (0.826666666666667, 0.463268365817091), (0.746666666666667, 0.478260869565217), (0.648, 0.497751124437781), (0.536, 0.517241379310345), (0.413333333333333, 0.538230884557721), (0.309333333333333, 0.553223388305847), (0.234666666666667, 0.562218890554723), (0.149333333333333, 0.575712143928036)", bounds: bounds)
        case .mezRiv:
            return CutDrawPath(string: "(0.125333333333333, 0.457271364317841), (0.136, 0.458770614692654), (0.173333333333333, 0.463268365817091), (0.253333333333333, 0.478260869565217), (0.352, 0.497751124437781), (0.464, 0.517241379310345), (0.586666666666667, 0.538230884557721), (0.690666666666667, 0.553223388305847), (0.765333333333333, 0.562218890554723), (0.850666666666667, 0.575712143928036)", bounds: bounds)
        case .sotManTut:
            return CutDrawPath(string: "(0.815466666666667, 0.841079460269865), (0.804053333333333, 0.839580209895052), (0.72416, 0.821589205397301), (0.669946666666667, 0.802098950524738), (0.60432, 0.775112443778111), (0.52728, 0.736131934032983), (0.453093333333333, 0.689655172413793), (0.38176, 0.63568215892054), (0.31328, 0.557721139430285), (0.259066666666667, 0.472263868065967), (0.224826666666667, 0.389805097451274), (0.207706666666667, 0.311844077961019), (0.19344, 0.241379310344828), (0.182026666666667, 0.187406296851574)", bounds: bounds)
        case .sotManMez:
            return CutDrawPath(string: "(0.895893333333333, 0.824587706146927), (0.876053333333333, 0.827586206896552), (0.856213333333333, 0.827586206896552), (0.833893333333333, 0.827586206896552), (0.809093333333333, 0.827586206896552), (0.779333333333333, 0.827586206896552), (0.734693333333333, 0.823088455772114), (0.682613333333333, 0.805097451274363), (0.630533333333333, 0.778110944527736), (0.571013333333333, 0.733133433283358), (0.521413333333333, 0.680659670164918), (0.494133333333333, 0.626686656671664), (0.486693333333333, 0.590704647676162), (0.484213333333333, 0.56071964017991), (0.484213333333333, 0.52623688155922)", bounds: bounds)
        case .sotManFal:
            return CutDrawPath(string: "(0.902133333333333, 0.834332833583208), (0.899866666666667, 0.808695652173913), (0.886266666666667, 0.764167916041979), (0.868133333333333, 0.716941529235382), (0.85, 0.667016491754123), (0.827333333333333, 0.608995502248876), (0.759333333333333, 0.544227886056971), (0.655066666666667, 0.484857571214393), (0.507733333333333, 0.429535232383808), (0.364933333333333, 0.371514242878561), (0.260666666666667, 0.317541229385307), (0.1972, 0.268965517241379), (0.1496, 0.217691154422789), (0.113333333333333, 0.163718140929535), (0.0884000000000001, 0.125937031484258)", bounds: bounds)
        case .sotRivTut:
            return CutDrawPath(string: "(0.184533333333333, 0.841079460269865), (0.195946666666667, 0.839580209895052), (0.27584, 0.821589205397301), (0.330053333333333, 0.802098950524738), (0.39568, 0.775112443778111), (0.47272, 0.736131934032983), (0.546906666666667, 0.689655172413793), (0.61824, 0.63568215892054), (0.68672, 0.557721139430285), (0.740933333333333, 0.472263868065967), (0.775173333333333, 0.389805097451274), (0.792293333333333, 0.311844077961019), (0.80656, 0.241379310344828), (0.817973333333333, 0.187406296851574)", bounds: bounds)
        case .sotRivMez:
            return CutDrawPath(string: "(0.104106666666667, 0.824587706146927), (0.123946666666667, 0.827586206896552), (0.143786666666667, 0.827586206896552), (0.166106666666667, 0.827586206896552), (0.190906666666667, 0.827586206896552), (0.220666666666667, 0.827586206896552), (0.265306666666667, 0.823088455772114), (0.317386666666667, 0.805097451274363), (0.369466666666667, 0.778110944527736), (0.428986666666667, 0.733133433283358), (0.478586666666667, 0.680659670164918), (0.505866666666667, 0.626686656671664), (0.513306666666667, 0.590704647676162), (0.515786666666667, 0.56071964017991), (0.515786666666667, 0.52623688155922)", bounds: bounds)
        case .sotRivFal:
            return CutDrawPath(string: "(0.902133333333333, 0.834332833583208), (0.899866666666667, 0.808695652173913), (0.886266666666667, 0.764167916041979), (0.868133333333333, 0.716941529235382), (0.85, 0.667016491754123), (0.827333333333333, 0.608995502248876), (0.759333333333333, 0.544227886056971), (0.655066666666667, 0.484857571214393), (0.507733333333333, 0.429535232383808), (0.364933333333333, 0.371514242878561), (0.260666666666667, 0.317541229385307), (0.1972, 0.268965517241379), (0.1496, 0.217691154422789), (0.113333333333333, 0.163718140929535), (0.0884000000000001, 0.125937031484258)", bounds: bounds)
        case .punSot:
            return CutDrawPath(string: "(0.506666666666667, 0.851574212893553), (0.504, 0.830584707646177), (0.504, 0.7976011994003), (0.504, 0.740629685157421), (0.504, 0.680659670164918), (0.501333333333333, 0.607196401799101), (0.496, 0.532233883058471), (0.496, 0.457271364317841), (0.496, 0.382308845577211), (0.498666666666667, 0.314842578710645), (0.498666666666667, 0.256371814092954)", bounds: bounds)
        case .punSop:
            return CutDrawPath(string: "(0.506666666666667, 0.0914542728635682), (0.506666666666667, 0.107946026986507), (0.506666666666667, 0.134932533733133), (0.504, 0.178410794602699), (0.501333333333333, 0.223388305847076), (0.501333333333333, 0.265367316341829), (0.498666666666667, 0.299850074962519), (0.498666666666667, 0.328335832083958), (0.498666666666667, 0.355322338830585), (0.498666666666667, 0.376311844077961), (0.498666666666667, 0.397301349325337), (0.498666666666667, 0.415292353823088)", bounds: bounds)
        case .punCav:
            return CutDrawPath(string: "(0.498666666666667, 0.860569715142429), (0.496, 0.854572713643178), (0.498666666666667, 0.839580209895052), (0.506666666666667, 0.815592203898051), (0.52, 0.782608695652174), (0.530666666666667, 0.740629685157421), (0.536, 0.680659670164918), (0.538666666666667, 0.623688155922039), (0.538666666666667, 0.568215892053973), (0.533333333333333, 0.518740629685157), (0.525333333333333, 0.482758620689655), (0.514666666666667, 0.454272863568216), (0.504, 0.434782608695652), (0.488, 0.422788605697151), (0.469333333333333, 0.415292353823088), (0.442666666666667, 0.415292353823088), (0.421333333333333, 0.415292353823088), (0.4, 0.428785607196402), (0.392, 0.44527736131934), (0.389333333333333, 0.458770614692654), (0.389333333333333, 0.476761619190405), (0.402666666666667, 0.487256371814093), (0.416, 0.493253373313343), (0.434666666666667, 0.494752623688156), (0.456, 0.494752623688156), (0.48, 0.472263868065967), (0.506666666666667, 0.415292353823088), (0.528, 0.350824587706147), (0.544, 0.274362818590705), (0.552, 0.2023988005997), (0.552, 0.15592203898051)", bounds: bounds)
        //default:
            //return CutDrawPath(path: [])
        }
    }
}
