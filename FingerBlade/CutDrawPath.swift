//
//  CutDrawPath.swift
//  FingerBlade
//
//  Created by Eric T Cormack on 3/1/17.
//  Copyright Â© 2017 the Odin Spire. All rights reserved.
//

import UIKit

struct CutDrawPath {
    let start: CGPoint
    let path: [CGPoint]
    
    init(start beginnging: CGPoint, path steps: [CGPoint]) {
        start = beginnging
        path = steps
    }
    
    init(path steps: [CGPoint]) {
        guard steps.count >= 1 else {
            start = CGPoint(x: 0, y: 0)
            path = []
            return
        }
        
        var tmp = steps
        
        start = tmp.remove(at: 0)
        path = tmp
    }
    
    init(string: String) {
        let steps = createCGPointArray(from: string)
        self.init(path: steps)
    }
    
    static func getExemplar(cut: CutLine, lefty: Bool = false) -> CutDrawPath {
        switch cut {
        case .fendManTut:
            return CutDrawPath(string: "(35.0, 80.0), (41.0, 86.0), (53.0, 106.0), (72.0, 139.0), (94.0, 177.0), (119.0, 217.0), (143.0, 258.0), (166.0, 298.0), (189.0, 334.0), (213.0, 366.0), (233.0, 401.0), (249.0, 434.0), (263.0, 456.0), (276.0, 474.0), (287.0, 489.0), (297.0, 501.0), (305.0, 511.0), (309.0, 516.0), (312.0, 519.0), (316.0, 521.0)")
        case .fendRivTut:
            return CutDrawPath(string: "(309.0, 85.0), (302.0, 101.0), (293.0, 118.0), (280.0, 144.0), (260.0, 179.0), (236.0, 211.0), (210.0, 245.0), (183.0, 280.0), (157.0, 312.0), (134.0, 341.0), (116.0, 369.0), (103.0, 393.0), (93.0, 416.0), (86.0, 433.0), (81.0, 445.0), (79.0, 454.0), (77.0, 459.0), (77.0, 462.0), (77.0, 463.0), (77.0, 464.0), (77.0, 466.0), (74.0, 473.0)")
        case .fendRivMez:
            return CutDrawPath(string: "(330.0, 59.0), (328.0, 69.0), (324.0, 81.0), (315.0, 96.0), (299.0, 119.0), (282.0, 141.0), (263.0, 165.0), (244.0, 189.0), (226.0, 212.0), (211.0, 233.0), (200.0, 249.0), (191.0, 265.0), (184.0, 280.0), (180.0, 292.0), (176.0, 302.0), (174.0, 309.0), (172.0, 317.0)")
        case .mezMan:
            return CutDrawPath(string: "(47.0, 305.0), (51.0, 306.0), (65.0, 309.0), (95.0, 319.0), (132.0, 332.0), (174.0, 345.0), (220.0, 359.0), (259.0, 369.0), (287.0, 375.0), (319.0, 384.0)")
        case .sotManTut:
            return CutDrawPath(string: "(60.0, 546.0), (64.0, 545.0), (92.0, 533.0), (111.0, 520.0), (134.0, 502.0), (161.0, 476.0), (187.0, 445.0), (212.0, 409.0), (236.0, 357.0), (255.0, 300.0), (267.0, 245.0), (273.0, 193.0), (278.0, 146.0), (282.0, 110.0)")
        case .sotManMez:
            return CutDrawPath(string: "(28.0, 565.0), (36.0, 567.0), (44.0, 567.0), (53.0, 567.0), (63.0, 567.0), (75.0, 567.0), (93.0, 564.0), (114.0, 552.0), (135.0, 534.0), (159.0, 504.0), (179.0, 469.0), (190.0, 433.0), (193.0, 409.0), (194.0, 389.0), (194.0, 366.0)")
        case .sotManFal:
            return CutDrawPath(string: "(2.0, 535.0), (3.0, 516.0), (9.0, 483.0), (17.0, 448.0), (25.0, 411.0), (35.0, 368.0), (65.0, 320.0), (111.0, 276.0), (176.0, 235.0), (239.0, 192.0), (285.0, 152.0), (313.0, 116.0), (334.0, 78.0), (350.0, 38.0), (361.0, 10.0)")
        case .sotRivFal:
            return CutDrawPath(string: "(314.0, 555.0), (311.0, 543.0), (306.0, 523.0), (296.0, 489.0), (286.0, 450.0), (273.0, 408.0), (250.0, 357.0), (217.0, 306.0), (175.0, 260.0), (105.0, 183.0), (40.0, 110.0)")
        case .punSot:
            return CutDrawPath(string: "(173.0, 513.0), (174.0, 499.0), (174.0, 477.0), (174.0, 439.0), (174.0, 399.0), (175.0, 350.0), (177.0, 300.0), (177.0, 250.0), (177.0, 200.0), (176.0, 155.0), (176.0, 116.0)")
        case .punSop:
            return CutDrawPath(string: "(157.0, 51.0), (157.0, 62.0), (157.0, 80.0), (158.0, 109.0), (159.0, 139.0), (159.0, 167.0), (160.0, 190.0), (160.0, 209.0), (160.0, 227.0), (160.0, 241.0), (160.0, 255.0), (160.0, 267.0)")
        case .punCav:
            return CutDrawPath(string: "(148.0, 564.0), (149.0, 560.0), (148.0, 550.0), (145.0, 534.0), (140.0, 512.0), (136.0, 484.0), (134.0, 444.0), (133.0, 406.0), (133.0, 369.0), (135.0, 336.0), (138.0, 312.0), (142.0, 293.0), (146.0, 280.0), (152.0, 272.0), (159.0, 267.0), (169.0, 267.0), (177.0, 267.0), (185.0, 276.0), (188.0, 287.0), (189.0, 296.0), (189.0, 308.0), (184.0, 315.0), (179.0, 319.0), (172.0, 320.0), (164.0, 320.0), (155.0, 305.0), (145.0, 267.0), (137.0, 224.0), (131.0, 173.0), (128.0, 125.0), (128.0, 94.0)")
        default:
            return CutDrawPath(path: [])
        }
    }
    
    func maxSpeed(bounds rect: CGRect) -> CGFloat {
        var maxSpeed: CGFloat = 0
        var prev = start
        
        for point in path {
            let dx = point.x - prev.x
            let dy = point.y - prev.y
            
            let speed = sqrt(dx * dx + dy * dy)
            
            maxSpeed = max(maxSpeed, speed)
            
            prev = point
        }
        
        return maxSpeed
    }
}
